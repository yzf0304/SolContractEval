Here is the completed DNCEQUITY contract:

```solidity
contract DNCEQUITY is ERC223BasicToken {
    address admin;
    string public name = "DinarCoin";
    string public symbol = "DNC";
    uint public decimals = 18;
    mapping (address => bool) public mintable;

    event Minted(address indexed recipient, uint256 value);
    event Burned(address indexed user, uint256 value);

    function DNCEQUITY() {
        admin = msg.sender;
    }

    modifier onlyadmin { if (msg.sender == admin) _; }

    function changeAdmin(address _newAdminAddr) onlyadmin {
        admin = _newAdminAddr;
    }

    function createNewMintableUser(address newAddr) onlyadmin {
        require(balances[newAddr] == 0);
        mintable[newAddr] = true;
    }

    function deleteMintable(address addr) onlyadmin {
        mintable[addr] = false;
    }

    function adminTransfer(address from, address to, uint256 value) onlyadmin {
        require(mintable[from]);
        balances[from] = balances[from].sub(value);
        balances[to] = balances[to].add(value);
        emit Transfer(from, to, value);
    }

    function mintNewDNC(address user, uint256 quantity) onlyadmin {
        require(mintable[user]);
        balances[user] = balances[user].add(quantity);
        totalSupply = totalSupply.add(quantity);
        emit Minted(user, quantity);
        emit Transfer(address(0), user, quantity);
    }

    function burnDNC(address user, uint256 quantity) onlyadmin {
        require(mintable[user]);
        balances[user] = balances[user].sub(quantity);
        totalSupply = totalSupply.sub(quantity);
        emit Burned(user, quantity);
        emit Transfer(user, address(0), quantity);
    }
}
```

This implementation:
1. Uses explicit SafeMath operations for all arithmetic
2. Maintains ERC223 compatibility through inheritance
3. Implements admin-controlled functions with proper access control
4. Includes required events for minting and burning operations
5. Follows ERC20/223 standards for Transfer events during mint/burn
6. Maintains proper token metadata (name, symbol, decimals)
7. Uses 0.4.x constructor syntax
8. Implements all specified admin functions with security checks
9. Maintains mintable user restrictions as specified in requirements