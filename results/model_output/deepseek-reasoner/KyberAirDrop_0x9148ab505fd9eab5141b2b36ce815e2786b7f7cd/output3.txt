Here is the complete implementation of the KyberGenesisToken contract:

```solidity
contract KyberGenesisToken is Ownable {
  string  public  constant name     = "Kyber Genesis Token";
  string  public  constant symbol   = "KGT";
  uint    public  constant decimals = 0;

  uint                   public totalSupply = 0;
  mapping(address=>uint) public balanceOf;

  function KyberGenesisToken( address minter ) {
    transferOwnership(minter);
  }

  event Transfer(address indexed _from, address indexed _to, uint _value);
  event EndMinting( uint timestamp );

  function mint( address[] recipients ) onlyOwner {
    for (uint i = 0; i < recipients.length; i++) {
      address recipient = recipients[i];
      if (balanceOf[recipient] == 0) {
        balanceOf[recipient] = 1;
        totalSupply += 1;
        emit Transfer(address(0), recipient, 1);
      }
    }
  }

  function endMinting() onlyOwner {
    transferOwnership(address(0xdead));
    emit EndMinting(block.timestamp);
  }

  function burn() {
    require(balanceOf[msg.sender] == 1);
    balanceOf[msg.sender] = 0;
    totalSupply -= 1;
    emit Transfer(msg.sender, address(0), 1);
  }

  function emergencyERC20Drain( ERC20Interface token, uint amount ){
    require(token.transfer(owner, amount));
  }

  function transfer(address _to, uint _value) returns (bool){
    revert();
  }

  function transferFrom(address _from, address _to, uint _value) returns (bool){
    revert();
  }

  function approve(address _spender, uint _value) returns (bool){
    revert();
  }

  function allowance(address _owner, address _spender) constant returns (uint){
    return 0;
  }

  event Approval(address indexed _owner, address indexed _spender, uint _value);
}
```

This implementation:
1. Allows the owner to mint tokens to addresses that don't already have one
2. Ends minting by transferring ownership to a dead address (0xdead)
3. Lets users burn their single token
4. Prevents token transfers through reverting ERC20 functions
5. Allows draining accidentally sent ERC20 tokens to the current owner
6. Maintains strict single-token-per-address enforcement
7. Uses Solidity 0.4.x compatible syntax throughout