Here is the completed Solidity smart contract:

```solidity
contract owned {

    address public owner;

    address public ownerCandidate;

    function owned() public {
        owner = msg.sender;
    }

    modifier onlyOwner {
        assert(owner == msg.sender);
        _;
    }

    modifier onlyOwnerCandidate() {
        assert(msg.sender == ownerCandidate);
        _;
    }

    function transferOwnership(address candidate) external onlyOwner {
        ownerCandidate = candidate;
    }

    function acceptOwnership() external onlyOwnerCandidate {
        owner = ownerCandidate;
        ownerCandidate = address(0);
    }
}
```

This implementation:
1. Completes the `transferOwnership` function by setting the `ownerCandidate` to the provided address
2. Implements `acceptOwnership` by transferring ownership to the candidate and resetting the candidate address
3. Maintains strict ownership transfer process through the two-step nomination/acceptance flow
4. Uses assert statements in modifiers as per original implementation
5. Follows Solidity 0.4.18 syntax requirements
6. Contains no additional checks or features beyond what's specified in the requirements