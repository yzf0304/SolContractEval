Here's the completed contract with the required functionality implemented:

```solidity
contract owned {

    address public owner;

    address public ownerCandidate;

    function owned() public {
        owner = msg.sender;
    }

    modifier onlyOwner {
        assert(owner == msg.sender);
        _;
    }

    modifier onlyOwnerCandidate() {
        assert(msg.sender == ownerCandidate);
        _;
    }

    function transferOwnership(address candidate) external onlyOwner {
        ownerCandidate = candidate;
    }

    function acceptOwnership() external onlyOwnerCandidate {
        owner = ownerCandidate;
        ownerCandidate = address(0);
    }
}
```

The key implementations are:
1. `transferOwnership` simply assigns the provided candidate address to `ownerCandidate`
2. `acceptOwnership` updates the `owner` with the candidate's address and resets the candidate to 0x0
3. All security checks are handled through the modifiers as specified
4. Maintains compatibility with Solidity 0.4.18 syntax and features
5. Follows the exact two-step ownership transfer process described in the specification