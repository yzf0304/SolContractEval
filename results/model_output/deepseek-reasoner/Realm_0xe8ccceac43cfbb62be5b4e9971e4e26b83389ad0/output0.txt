Here's the completed AccessControl contract with the required functions implemented:

```solidity
contract AccessControl {

    address public creatorAddress;
    uint16 public totalSeraphims = 0;
    mapping (address => bool) public seraphims;
    bool public isMaintenanceMode = true;

    modifier onlyCREATOR() {
        require(msg.sender == creatorAddress);
        _;
    }

    modifier onlySERAPHIM() {
        require(seraphims[msg.sender] == true);
        _;
    }

    modifier isContractActive {
        require(!isMaintenanceMode);
        _;
    }

    function AccessControl() public {
        creatorAddress = msg.sender;
    }

    function addSERAPHIM(address _newSeraphim) onlyCREATOR public {
        require(!seraphims[_newSeraphim]);
        seraphims[_newSeraphim] = true;
        totalSeraphims++;
    }

    function removeSERAPHIM(address _oldSeraphim) onlyCREATOR public {
        require(seraphims[_oldSeraphim]);
        seraphims[_oldSeraphim] = false;
        totalSeraphims--;
    }

    function updateMaintenanceMode(bool _isMaintaining) onlyCREATOR public {
        isMaintenanceMode = _isMaintaining;
    }
}
```

This implementation:
1. Properly implements addSERAPHIM with checks for existing role assignment
2. Correctly handles removal of SERAPHIM roles with state validation
3. Directly updates maintenance mode status as specified
4. Maintains the totalSeraphims count accurately
5. Uses only the required modifiers and maintains compatibility with Solidity 0.4.19
6. Follows all security checks specified in the documentation
7. Contains no additional contracts or dependencies