To create a Solidity smart contract that implements the interfaces and functions defined in the provided code snippets, you can start by defining your contract and importing the necessary interfaces. Here is an example contract that implements some of the functions from the provided interfaces:

```solidity
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./IERC165.sol";
import "./IERC721.sol";
import "./IERC721Metadata.sol";
import "./IERC721Enumerable.sol";
import "./Address.sol";

contract MyERC721Contract is IERC721, IERC721Metadata, IERC721Enumerable {
    using Address for address;

    // Implement functions from IERC721 interface
    function balanceOf(address owner) external view override returns (uint256 balance) {
        // Implement the logic here
    }

    function ownerOf(uint256 tokenId) external view override returns (address owner) {
        // Implement the logic here
    }

    function safeTransferFrom(address from, address to, uint256 tokenId) external override {
        // Implement the logic here
    }

    function transferFrom(address from, address to, uint256 tokenId) external override {
        // Implement the logic here
    }

    function approve(address to, uint256 tokenId) external override {
        // Implement the logic here
    }

    function getApproved(uint256 tokenId) external view override returns (address operator) {
        // Implement the logic here
    }

    function setApprovalForAll(address operator, bool _approved) external override {
        // Implement the logic here
    }

    function isApprovedForAll(address owner, address operator) external view override returns (bool) {
        // Implement the logic here
    }

    // Implement functions from IERC721Metadata interface
    function name() external view override returns (string memory) {
        // Implement the logic here
    }

    function symbol() external view override returns (string memory) {
        // Implement the logic here
    }

    function tokenURI(uint256 tokenId) external view override returns (string memory) {
        // Implement the logic here
    }

    // Implement functions from IERC721Enumerable interface
    function totalSupply() external view override returns (uint256) {
        // Implement the logic here
    }

    function tokenOfOwnerByIndex(address owner, uint256 index) external view override returns (uint256) {
        // Implement the logic here
    }

    function tokenByIndex(uint256 index) external view override returns (uint256) {
        // Implement the logic here
    }
}
```

This is a basic template for a Solidity smart contract that implements some of the functions from the provided interfaces. You can further expand and customize this contract based on your specific requirements and use cases.