To create a Solidity smart contract that implements the ERC721 standard, you can start by defining the contract and importing the necessary interfaces. Here is a basic example to get you started:

```solidity
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./IERC165.sol";
import "./IERC721.sol";
import "./IERC721Metadata.sol";
import "./IERC721Receiver.sol";
import "./Address.sol";

contract MyERC721Contract is IERC721, IERC721Metadata {
    using Address for address;

    // Mapping from token ID to owner address
    mapping(uint256 => address) private _tokenOwners;

    // Mapping from owner to number of owned tokens
    mapping(address => uint256) private _ownedTokensCount;

    // Other necessary state variables and mappings can be added here

    // Implement the required functions from the interfaces

    // Implement the IERC721 functions

    // Implement the IERC721Metadata functions

    // You can add your custom functions and logic here

}
```

This is a basic template for an ERC721 contract. You will need to fill in the implementation details for each function based on your specific requirements. Feel free to customize and expand upon this template to suit your needs.