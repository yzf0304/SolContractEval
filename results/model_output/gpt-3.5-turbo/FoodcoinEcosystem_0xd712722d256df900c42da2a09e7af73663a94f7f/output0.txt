The `Manager` contract has been completed based on the provided context and description. Below is the completed contract code:

```solidity
contract Manager is SpecialManager {

    mapping ( address => bool ) public managerAddressMap;
    mapping ( address => uint256 ) public managerAddressNumberMap;
    mapping ( uint256 => address ) public managerListMap;
    uint256 public managerCountInt = 0;

    modifier isManagerOrOwner {
        require(managerAddressMap[msg.sender] == true || ownerAddressMap[msg.sender] == true);
        _;
    }

    function managerOn(address _onManagerAddress) external isOwner returns (bool retrnVal) {
        require(_onManagerAddress != address(0));

        if (managerAddressNumberMap[_onManagerAddress] > 0) {
            if (!managerAddressMap[_onManagerAddress]) {
                managerAddressMap[_onManagerAddress] = true;
                ContractManagementUpdate("Manager", msg.sender, _onManagerAddress, true);
                retrnVal = true;
            } else {
                retrnVal = false;
            }
        } else {
            managerAddressMap[_onManagerAddress] = true;
            managerAddressNumberMap[_onManagerAddress] = managerCountInt;
            managerListMap[managerCountInt] = _onManagerAddress;
            managerCountInt++;
            ContractManagementUpdate("Manager", msg.sender, _onManagerAddress, true);
            retrnVal = true;
        }
    }

    function managerOff(address _offManagerAddress) external isOwner returns (bool retrnVal) {
        if (managerAddressNumberMap[_offManagerAddress] > 0 && managerAddressMap[_offManagerAddress]) {
            managerAddressMap[_offManagerAddress] = false;
            ContractManagementUpdate("Manager", msg.sender, _offManagerAddress, false);
            retrnVal = true;
        } else {
            retrnVal = false;
        }
    }

    function Manager() public {
        managerAddressMap[msg.sender] = true;
        managerAddressNumberMap[msg.sender] = managerCountInt;
        managerListMap[managerCountInt] = msg.sender;
        managerCountInt++;
    }
}
```

The `Manager` contract now includes the necessary functions to enable, disable, and manage manager addresses, along with the required mappings and modifiers.