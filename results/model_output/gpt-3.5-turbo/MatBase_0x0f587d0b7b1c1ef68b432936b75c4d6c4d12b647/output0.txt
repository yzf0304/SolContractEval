Based on the provided contract code, it seems to be a Solidity smart contract for a token sale. The contract includes functionalities for managing token transfers, ownership, whitelisting, and token minting.

Here is a brief overview of the main components of the contract:

1. SafeMath Library: Contains functions for safe mathematical operations to prevent overflows and underflows.

2. Ownable Contract: Manages ownership of the contract, allowing the owner to transfer ownership to another address.

3. ERC20Basic and ERC20 Contracts: Define the basic ERC20 token interface with functions for balance inquiry, transfers, and approvals.

4. BasicToken Contract: Implements the ERC20Basic interface and includes additional functionality for managing token transfers and ownership control.

5. StandardToken Contract: Extends BasicToken and ERC20 contracts to include functions for token allowances and transfers from one address to another.

6. MatBase Contract: This contract seems to be the main token sale contract, handling token purchases, whitelisting, fund reservations, and conversion of presale tokens to main sale tokens.

Overall, the contract structure follows the standard ERC20 token implementation with additional features for managing ownership, token sales, and whitelisting. If you have specific questions or need further clarification on any part of the contract, feel free to ask.