```solidity
contract PaymentForwarder is Haltable {

  address public teamMultisig;
  uint public totalTransferred;
  uint public customerCount;
  mapping(uint128 => uint) public paymentsByCustomer;
  mapping(address => uint) public paymentsByBenefactor;

  event PaymentForwarded(address source, uint amount, uint128 customerId, address benefactor);

  function PaymentForwarder(address _owner, address _teamMultisig) {
    teamMultisig = _teamMultisig;
    owner = _owner;
  }

  function payWithoutChecksum(uint128 customerId, address benefactor) public stopInEmergency payable {}

  function pay(uint128 customerId, address benefactor, bytes1 checksum) public stopInEmergency payable {}

  function payForMyselfWithChecksum(uint128 customerId, bytes1 checksum) public payable {}

  function payForMyself(uint128 customerId) public payable {}

  receive() external payable {}
}
```