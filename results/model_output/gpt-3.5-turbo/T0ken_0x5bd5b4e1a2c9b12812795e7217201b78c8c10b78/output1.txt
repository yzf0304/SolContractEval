As a Solidity smart contract development expert, I see that the provided code includes three main contracts: Ownable, Lockable, and Destroyable, along with their respective functionalities. 

- The Ownable contract provides ownership functionality, allowing the contract owner to transfer ownership to another address.
- The Lockable contract adds the ability for the owner to set the lock status of the contract, preventing modifications when locked.
- The Destroyable contract allows the owner to self-destruct the contract.

Additionally, there is a LockableDestroyable contract that combines the functionalities of Lockable and Destroyable.

Furthermore, there are two libraries: AdditiveMath, which provides functions for safe addition and subtraction of numbers, and AddressMap, which implements a map of unique indexed addresses with various functions for managing token holders and transfers.

If you have any specific questions or need further clarification on any part of the code, feel free to ask!