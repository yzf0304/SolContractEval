```solidity
contract Token is Pausable, ERC20 {

  using SafeMath for uint;

  mapping(address => uint) balances;
  mapping (address => mapping (address => uint)) internal allowed;

  function Token() ERC20("DATx", "DATx", 18) public {
    totalSupply = 10000000000 * 10 ** uint(decimals);
    balances[msg.sender] = totalSupply;
  }

  function transfer(address _to, uint _value) whenNotPaused public returns (bool) {}

  function balanceOf(address _owner) public view returns (uint balance) {}

  function transferFrom(address _from, address _to, uint _value) public whenNotPaused returns (bool) {}

  function approve(address _spender, uint _value) public whenNotPaused returns (bool) {}

  function allowance(address _owner, address _spender) public view returns (uint) {}

  function increaseApproval(address _spender, uint _addedValue) public whenNotPaused returns (bool) {}

  function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused returns (bool) {}
}
```