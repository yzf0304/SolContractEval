I have completed the `WhiteList` smart contract based on the provided context and description. Here is the completed contract:

```solidity
contract WhiteList is Ownable {

    mapping(address => bool) public whiteList;
    uint public totalWhiteListed;

    event LogWhiteListed(address indexed user, uint whiteListedNum);
    event LogWhiteListedMultiple(uint whiteListedNum);
    event LogRemoveWhiteListed(address indexed user);

    function isWhiteListed(address _user) external view returns (bool) {
        return whiteList[_user]; 
    }

    function removeFromWhiteList(address _user) external onlyOwner() returns (bool) {
        require(whiteList[_user] == true);
        whiteList[_user] = false;
        totalWhiteListed--;
        emit LogRemoveWhiteListed(_user);
        return true;
    }

    function addToWhiteList(address _user) external onlyOwner() returns (bool) {
        if (whiteList[_user] != true) {
            whiteList[_user] = true;
            totalWhiteListed++;
            emit LogWhiteListed(_user, totalWhiteListed);            
        }
        return true;
    }

    function addToWhiteListMultiple(address[] calldata _users) external onlyOwner() returns (bool) {
        for (uint i = 0; i < _users.length; ++i) {
            if (whiteList[_users[i]] != true) {
                whiteList[_users[i]] = true;
                totalWhiteListed++;                          
            }           
        }
        emit LogWhiteListedMultiple(totalWhiteListed); 
        return true;
    }
}
```