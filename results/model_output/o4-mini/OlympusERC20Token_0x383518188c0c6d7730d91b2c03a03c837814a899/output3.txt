pragma solidity 0.7.5;

contract OlympusERC20Token is Divine {
    using SafeMath for uint256;

    /**
     * @notice Initializes the OlympusERC20Token contract with the name "Olympus", symbol "OHM", and 9 decimal places.
     */
    constructor() Divine("Olympus", "OHM", 9) {
        // Intentionally left empty
    }

    /**
     * @notice Mints a specified amount of tokens and assigns them to a given account.
     * @dev Can only be called by the Vault. Uses the internal `_mint` function.
     * @param account_ The address to which the tokens will be minted.
     * @param amount_ The amount of tokens to mint.
     */
    function mint(address account_, uint256 amount_) external onlyVault {
        _mint(account_, amount_);
    }

    /**
     * @notice Destroys a specified amount of tokens from the caller's balance.
     * @dev Uses the internal `_burn` function.
     * @param amount The amount of tokens to burn.
     */
    function burn(uint256 amount) public virtual {
        _burn(msg.sender, amount);
    }

    /**
     * @notice Destroys a specified amount of tokens from a given account, deducting from the caller's allowance.
     * @dev Calls the internal `_burnFrom` function.
     * @param account_ The address from which the tokens will be burned.
     * @param amount_ The amount of tokens to burn.
     */
    function burnFrom(address account_, uint256 amount_) public virtual {
        _burnFrom(account_, amount_);
    }

    /**
     * @notice Internal function to burn tokens from a given account and update the allowance.
     * @dev Reverts if the caller's allowance is insufficient.
     * @param account_ The address from which the tokens will be burned.
     * @param amount_ The amount of tokens to burn.
     */
    function _burnFrom(address account_, uint256 amount_) public virtual {
        uint256 currentAllowance = allowance(account_, msg.sender);
        uint256 newAllowance = currentAllowance.sub(amount_, "ERC20: burn amount exceeds allowance");
        _approve(account_, msg.sender, newAllowance);
        _burn(account_, amount_);
    }
}