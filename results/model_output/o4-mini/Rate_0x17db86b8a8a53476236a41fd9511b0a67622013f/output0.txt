pragma solidity ^0.4.18;

contract RBInformationStore is Ownable {
    address public profitContainerAddress;
    address public companyWalletAddress;
    uint    public etherRatioForOwner;
    address public multiSigAddress;
    address public accountAddressForSponsee;
    bool    public isPayableEnabledForAll;

    modifier onlyMultiSig() {
        require(msg.sender == multiSigAddress);
        _;
    }

    function RBInformationStore(
        address _profitContainerAddress,
        address _companyWalletAddress,
        uint    _etherRatioForOwner,
        address _multiSigAddress,
        address _accountAddressForSponsee
    ) public {
        profitContainerAddress      = _profitContainerAddress;
        companyWalletAddress        = _companyWalletAddress;
        etherRatioForOwner          = _etherRatioForOwner;
        multiSigAddress             = _multiSigAddress;
        accountAddressForSponsee    = _accountAddressForSponsee;
        isPayableEnabledForAll      = false;
    }

    function changeProfitContainerAddress(address _address) onlyMultiSig public {
        profitContainerAddress = _address;
    }

    function changeCompanyWalletAddress(address _address) onlyMultiSig public {
        companyWalletAddress = _address;
    }

    function changeEtherRatioForOwner(uint _value) onlyMultiSig public {
        etherRatioForOwner = _value;
    }

    function changeMultiSigAddress(address _address) onlyMultiSig public {
        multiSigAddress = _address;
    }

    function changeOwner(address _address) onlyMultiSig public {
        owner = _address;
    }

    function changeAccountAddressForSponsee(address _address) onlyMultiSig public {
        accountAddressForSponsee = _address;
    }

    function changeIsPayableEnabledForAll() onlyMultiSig public {
        isPayableEnabledForAll = !isPayableEnabledForAll;
    }

    function() public payable {
        require(isPayableEnabledForAll);
    }
}