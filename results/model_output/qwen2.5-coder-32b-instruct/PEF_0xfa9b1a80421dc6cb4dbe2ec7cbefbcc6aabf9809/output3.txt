Below is the complete and functional implementation of the `owned` contract according to the provided specifications and comments:

```solidity
contract owned {

    address public owner;

    address public ownerCandidate;

    function owned() public {
        owner = msg.sender;
    }

    modifier onlyOwner {
        assert(owner == msg.sender);
        _;
    }

    modifier onlyOwnerCandidate() {
        assert(msg.sender == ownerCandidate);
        _;
    }

    function transferOwnership(address candidate) external onlyOwner {
        ownerCandidate = candidate;
    }

    function acceptOwnership() external onlyOwnerCandidate {
        owner = ownerCandidate;
        ownerCandidate = 0x0;
    }
}
```

This contract initializes with the deployer as the owner and provides functionality for transferring ownership through a two-step process where a candidate must accept the nomination before it takes effect.